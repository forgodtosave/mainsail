@top Program { Import* Block+ }

@skip { LineComment newline | AutoGenerated newline | space | blankLineStart space? newline } 


charSep<content,char> { content (char content)+ }
valueBlock<content> { content | newline indent (content newline)+ (dedent | eof) }


Import { "[" ImportKeyword File "]" newline }
Block {"[" BlockType Identifier? "]" newline BlockBody }

BlockBody { BodyLine+ }
BodyLine { Parameter ":" Value newline | GcodeKeyword ":" Jinja2 newline }

Value { valueBlock<value> }
Jinja2 { valueBlock<jinja2> }

value { Pin | VirtualPin | Cords | Number | String | Boolean  }
Number { number }
String { string }
Cords { charSep<number, ","> }
VirtualPin { string ":" string }
File {  "/"? string ( "/" string)* }




@tokens {
  ImportKeyword{ "include" }
  GcodeKeyword{ "gcode" }
  Identifier { $[a-zA-Z0-9_.\-]+ }
  Parameter { $[a-zA-Z_]+ }
  
  string { $[ a-zA-Z0-9_.\-]+ }
  jinja2 { $[ a-zA-Z0-9_.\-"'{}%=]+ }
  number { "-"? $[0-9]+ ("." $[0-9]*)? }
  Boolean { "True" | "False" } 
  Pin { ("^" | "~")? "!"? "P" $[A-Z] $[0-9]+ } 

  BlockType {
    "mcu" | "printer" | "extruder" | "adxl345" | "resonance_tester" | "stepper_x" | "stepper_y" | "stepper_z" | 
    "stepper_z1" | "z_tilt" | "heater_bed" | "probe" | "bed_mesh" | "screws_tilt_adjust" | "temperature_sensor" | 
    "fan" | "heater_fan" | "controller_fan" | "static_digital_output" | "tmc2209" | "tmc2208" | "homing_override" 
  }

  AutoGenerated { "#*#" ![\n\r]* }
  LineComment { "#" ![\n\r]* }

  space { $[ \t\f]+ }



  @precedence { space, jinja2, string}
  @precedence { AutoGenerated, LineComment, number, Pin, Boolean, ImportKeyword, string}
  @precedence { GcodeKeyword, Parameter}
  @precedence { jinja2, Parameter}
}

@external tokens newlines from "./tokens.js" { newline, blankLineStart, eof }
@external tokens indentation from "./tokens.js" { indent, dedent }
@context trackIndent from "./tokens.js"


@detectDelim
